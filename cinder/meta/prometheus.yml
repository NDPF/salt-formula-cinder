{%- from "cinder/map.jinja" import controller, volume, monitoring with context %}
{%- set is_controller = controller.get('enabled', False) %}
{%- set is_volume = volume.get('enabled', False) %}

{%- if is_controller or is_volume %}
server:
  alert:
{%- if is_controller %}
{%- raw %}
    CinderAPIDown:
      if: >-
        max(openstack_api_check_status{service=~"cinder.*"}) == 0
      for: 2m
      labels:
        severity: down
        service: "{{ $labels.service }}"
      annotations:
        summary: "Endpoint check for '{{ $labels.service }}' is down"
        description: >-
            Endpoint check for '{{ $labels.service }}' is down for the last 2 minutes
    CinderAPIServiceInfo:
      if: >-
        http_response_status{service=~"cinder-api"} == 0
      for: 2m
      labels:
        severity: info
        service: "{{ $labels.service }}"
      annotations:
        summary: "HTTP check for '{{ $labels.service }}' down"
        description: >-
            The HTTP check for '{{ $labels.service }}' is down on {{ $labels.host }} for the last 2 minutes.
    CinderServicesInfo:
      if: >-
          openstack_cinder_service == 1
      for: 2m
      labels:
        severity: info
        service: "{{ $labels.service }}"
      annotations:
        summary: "'{{ $labels.service }}' is down"
        description: >-
            '{{ $labels.service }}' is down on {{ $labels.hostname }} for the last 2 minutes.
    CinderServicesWarning:
      if: >-
          openstack_cinder_services{service=~"cinder-volume|cinder-scheduler", state="down"} >= on (service) sum(openstack_cinder_services{service=~"cinder-volume|cinder-scheduler"}) by (service) * {%- endraw %} {{monitoring.services_failed_warning_threshold_percent}} {%- raw %}
      for: 2m
      labels:
        severity: warning
        service: "{{ $labels.service }}"
      annotations:
        summary: "More than {%- endraw %} {{monitoring.services_failed_warning_threshold_percent*100}}%{%- raw %} of {{ $labels.service }} services are down"
        description: >-
            {{ $value }} {{ $labels.service }} services are down for the last 2 minutes (More than {%- endraw %} {{monitoring.services_failed_warning_threshold_percent*100}}%{%- raw %})
    CinderServicesCritical:
      if: >-
          openstack_cinder_services{service=~"cinder-volume|cinder-scheduler", state="down"} >= on (service) sum(openstack_cinder_services{service=~"cinder-volume|cinder-scheduler"}) by (service) * {%- endraw %} {{monitoring.services_failed_critical_threshold_percent}} {%- raw %}
      for: 2m
      labels:
        severity: critical
        service: "{{ $labels.service }}"
      annotations:
        summary: "More than {%- endraw %} {{monitoring.services_failed_critical_threshold_percent*100}}%{%- raw %} of {{ $labels.service }} services are down"
        description: >-
            {{ $value }} {{ $labels.service }} services are down for the last 2 minutes (More than {%- endraw %} {{monitoring.services_failed_critical_threshold_percent*100}}%{%- raw %})
    CinderServicesDown:
      if: >-
        openstack_cinder_services{state="up",service=~"cinder-volume|cinder-scheduler"} == 0
      for: 2m
      labels:
        severity: down
        service: "{{ $labels.service }}"
      annotations:
        summary: "All {{ $labels.service }} services are down"
        description: >-
            All {{ $labels.service }} services are down for the last 2 minutes
{%- endraw %}
{%- endif %}
    CinderErrorLogsTooHigh:
      {%- set log_threshold = monitoring.error_log_rate|float %}
      if: >-
        sum(rate(log_messages{service="cinder",level=~"(?i:(error|emergency|fatal))"}[5m])) without (level) > {{ log_threshold }}
{%- raw %}
      labels:
        severity: warning
        service: "{{ $labels.service }}"
      annotations:
        summary: 'Too many errors in {{ $labels.service }} logs'
        description: 'The rate of errors in {{ $labels.service }} logs over the last 5 minutes is too high on node {{ $labels.host }} (current value={{ $value }}, threshold={%- endraw %}{{ log_threshold }}).'
{%- endif %}
